use Libraries.Game.Game
use Libraries.Game.all
use Libraries.Game.Graphics.Drawable
use Libraries.Game.Graphics.all
use Libraries.Game.Physics.all
use Libraries.Game.GameInput
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.InputMonitor
use Libraries.Interface.Item2D
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Compute.Vector2
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Interface.Events.all
use Libraries.Game.Graphics.ImageSheet
use Libraries.Sound.Audio
use Libraries.Sound.all

class Main is Game, MouseListener
    //Keyboard
    InputMonitor monitor
    KeyboardEvent keys
    //color
    Color color
    //Drawables
    Drawable background
    Drawable nukeCirc
    Drawable point1
    Drawable point2
    Drawable point3
    Drawable point4
    Sprite nuke
    Drawable missilepath
    Drawable target1
     Drawable target2
      Drawable target3
    //Labels
Label label1
Label label2
Label label3
Label countdown
//int
integer count = 50
//bool
boolean ctrue = false
    Audio missileSound
    Audio impactSound
    action Main
        StartGame()
    end

  
    action CreateGame
        SetScreenSize(1024, 576)
        background:Load("nuketown.png")
        background:SetSize(1024, 576)
        Add(background)    
        point1:LoadFilledTriangle(30,40,50,10,10,10)
        point1:SetSize(10,10)
        point1:SetPosition(1024/2 + 250, 576/2)
        Add(point1)
        //point 2
        point2:LoadFilledTriangle(30,40,50,10,10,10)
        point2:SetSize(10,10)
        point2:SetPosition(575,465)
        Add(point2)
        point2:SetColor(color:Red())
        //point3
        point3:LoadFilledTriangle(30,40,50,10,10,10)
        point3:SetSize(10,10)
        point3:SetPosition(170,415)
        Add(point3)
        point3:SetColor(color:Blue())

        //point 4
        point4:LoadFilledTriangle(30,40,50,10,10,10)
        point4:SetSize(10,10)
        point4:SetPosition(700,500)
        Add(point4)
        point4:SetColor(color:Yellow())
        
        //Labels
countdown:SetText("Launching in ")
countdown:SetPosition(50, 200)

label1:SetText("The triangles are where you are launching from
 and the squares are your targets")
label1:SetPosition(5, 100)
Add(label1)

label2:SetText("Press A,B or C 
to choose where to launch")
label2:SetPosition(5, 200)
Add(label2)

label3:SetText("Press 1,2 or 3 
to choose where to launch")
label3:SetPosition(5, 150)
Add(label3)
//nuke
nuke:Main()
Add(nuke)
end

  
    action Update(number seconds)
    if monitor:IsKeyPressed(Keys:SPACE)
Add(countdown)
ctrue = true
end
countdown:SetText("Launching in " + count/10)
if count > 0 and ctrue = true
count = count - 1
elseif ctrue = false
count = 50
end
     if monitor:IsKeyPressed(Keys:A)
    nuke:Launch(point1)
    end
if monitor:IsKeyPressed(Keys:B)
    nuke:Launch(point2)
    end
if monitor:IsKeyPressed(Keys:C)
    nuke:Launch(point3)
    end
if monitor:IsKeyPressed(Keys:NUM_1)
   MovementR(target1)
 
    end
if monitor:IsKeyPressed(Keys:NUM_2)
   MovementR(target2)
 
    end
if monitor:IsKeyPressed(Keys:NUM_3)
   MovementR(target3)
    end
    end
action MovementR(Drawable target)
if nuke:GetX() > target:GetX()
nuke:MoveX(-1)
elseif nuke:GetX() = target:GetX()
   nuke:MoveX(0) 
end
end
action MovementL(Drawable target)
if nuke:GetX() < target:GetX()
nuke:MoveX(1)
elseif nuke:GetX() = target:GetX() 
     nuke:MoveX(0)
   
end
end 
   
   
end
